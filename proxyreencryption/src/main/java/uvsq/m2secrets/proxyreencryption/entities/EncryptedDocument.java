package uvsq.m2secrets.proxyreencryption.entities;

import it.unisa.dia.gas.jpbc.Element;

import java.io.Serializable;

import javax.crypto.Cipher;
import javax.crypto.spec.IvParameterSpec;
import javax.crypto.spec.SecretKeySpec;

@SuppressWarnings("serial")
public class EncryptedDocument implements Serializable {
	private Long id;
	private Long recipientId;
	private byte[] encryptedSessionKey;
	private byte[] encryptedBody;

	public static EncryptedDocument encrypt(byte[] message, User dest, long level) {
	   //TODO: create an encryption
		return null;
	}
	public static byte[] decryptDocument(EncryptedDocument edoc,PrivKey priv) {
	   //TODO: create the associated decryption
	   return null;
	}
	//autogenerated data
	public EncryptedDocument() {}

	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public Long getRecipientId() {
		return recipientId;
	}
	public void setRecipientId(Long recipientId) {
		this.recipientId = recipientId;
	}
	public EncryptedSessionKey getEncryptedSessionKey() {
		return new EncryptedSessionKey(encryptedSessionKey);
	}
	public void setEncryptedSessionKey(EncryptedSessionKey encryptedSessionKey) {
		this.encryptedSessionKey = encryptedSessionKey.toBytes();
	}
	public byte[] getEncryptedBody() {
		return encryptedBody;
	}
	public void setEncryptedBody(byte[] encryptedBody) {
		this.encryptedBody = encryptedBody;
	}
	public byte[] getEncryptedSessionKeyRaw() {
		return encryptedSessionKey;
	}
	public void setEncryptedSessionKeyRaw(byte[] encryptedSessionKey) {
		this.encryptedSessionKey=encryptedSessionKey;		
	}
	
}
